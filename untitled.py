# -*- coding: utf-8 -*-
""".ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/kaamd/73a7d1a8a025bf0a51a47f6467f16d7f/.ipynb
"""

!pip install requests beautifulsoup4 transliterate

import requests
from bs4 import BeautifulSoup
from collections import Counter
from transliterate import translit
import csv

BASE_URL = "https://eksmo.ru"
TARGET_URL = "https://eksmo.ru/podborka-knigi-yaponskih-avtorov/"
HEADERS = {
    "User-Agent": "Mozilla/5.0"
}

def get_books_from_page(url):
    response = requests.get(url, headers=HEADERS)
    response.encoding = response.apparent_encoding  #получаем кодировку с сайта, чтобы не было кракозябр в файле csv

    soup = BeautifulSoup(response.text, "html.parser")
    books = soup.select("div.book")

    result = []
    for book in books:
        title = book.select_one(".book__name")
        author = book.select_one(".book__author")
        link_tag = book.select_one("a.book__link")

        if title and author and link_tag:
            result.append({
                "title": title.get_text(strip=True),
                "author": author.get_text(strip=True),
                "link": BASE_URL + link_tag["href"]
            })

    return result


def save_to_csv(books, filename="japanese_books.csv"):
    with open(filename, mode="w", newline="", encoding="utf-8") as file:
        writer = csv.DictWriter(file, fieldnames=["title", "author", "link"])
        writer.writeheader()
        writer.writerows(books)
    print(f"✅ Сохранено в файл: {filename}")

def main():
    books = get_books_from_page(TARGET_URL)
    save_to_csv(books)

    # Вывод топа авторов по частоте
    author_counter = Counter(book["author"] for book in books)
    print("\nТОП японских авторов по количеству книг:")
    for author, count in author_counter.most_common():
        try:
            author_latin = translit(author, 'ru', reversed=True)
        except Exception:
            author_latin = author  # fallback
        print(f"{author_latin}: {count}")

if __name__ == "__main__":
    main()